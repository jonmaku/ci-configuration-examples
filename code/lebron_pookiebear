% Data
lebron_per_year =  [2003 20.9;
                    2004 27.2;
                    2005 31.4;
                    2006 27.3;
                    2007 30.0;
                    2008 28.4;
                    2009 29.7;
                    2010 26.7;
                    2011 27.1;
                    2012 26.8;
                    2013 27.1;
                    2014 25.3;
                    2015 25.3;
                    2016 26.4;
                    2017 27.5;
                    2018 27.4;
                    2019 25.3;
                    2020 25.0;
                    2021 30.3;
                    2022 28.9;
                    2023 25.7;
                    2024 25.1];

% Extract year and points per game
year = lebron_per_year(:,1);
pointspergame = lebron_per_year(:,2);

% Bar chart
figure;
hold on
bar(year, pointspergame)
title('Lebron Point Averages by Calendar Year', 'FontSize', 16)
xlabel('Year', 'FontSize', 16);
ylabel('Points', 'FontSize', 16);
set(gca, 'FontSize', 16)

% Polynomial fit (3rd degree)
p = polyfit(year, pointspergame, 2);

% Generate smooth curve for plotting
year_fine = linspace(min(year), max(year), 100); % More points for a smooth curve
points_fit = polyval(p, year_fine);

% Plot the polynomial fit
plot(year_fine, points_fit, 'r-', 'LineWidth', 2)

legend('Actual Points per Game', '3rd Degree Polynomial Fit', 'Location', 'Best')

hold off

% Predict points per game in 2027
year_pred = 2040;
points_pred = polyval(p, year_pred)

% Display the prediction
fprintf("Projected PPG for LeBron in 2027: %.2f\n", points_pred);
69 funny number 79898
